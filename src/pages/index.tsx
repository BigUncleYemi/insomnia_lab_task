/* eslint-disable react/no-unescaped-entities */
import Head from "next/head";
import { useRouter } from "next/router";
import { ethers } from "ethers";
import styles from "@/styles/Home.module.css";
import { useEffect, Fragment, useState } from "react";
import { Address, useWalletContext } from "@/context";

declare global {
  interface Window {
    ethereum: any; //TODO: fix type
  }
}

const parseAddress = (address: string) =>
  `${address[0]}${address[1]}${address[2]}${address[3]}.....${address[38]}${address[39]}${address[40]}${address[41]}`;

export default function Home() {
  const {
    balance,
    handleBalance,
    defaultAddress,
    handleDefaultAddress,
    handleAddresses,
  } = useWalletContext();
  const router = useRouter();
  const [hasWallet, setHasWallet] = useState<boolean>(false);

  const handleGoToWallet = () => {
    router.push({
      pathname: "/wallet",
    });
  };

  useEffect(() => {
    console.log(global?.window?.ethereum);
    if (global?.window?.ethereum) {
      return setHasWallet(true);
    } else {
      return setHasWallet(false);
    }
  }, []);
  const handleConnectWallet = async () => {
    const [account] = await window.ethereum.request({
      method: "eth_requestAccounts",
    });
    const provider = new ethers.providers.Web3Provider(window.ethereum);
    const balance = await provider.getBalance(account);
    const addresses = await global?.window?.ethereum.request({
      method: "eth_requestAccounts",
    });
    const getAddressArray: Array<Address> = addresses?.map(
      (address: string) => ({
        parse: parseAddress(address),
        full: address,
      })
    );
    handleBalance(ethers.utils.formatEther(balance));
    handleDefaultAddress(getAddressArray?.[0]);
    handleAddresses(getAddressArray);
    handleGoToWallet();
  };
  console.log(process.env)
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className={styles.center}>
          <h1>Welcome to WalletViewer</h1>
          {hasWallet ? (
            <button onClick={handleConnectWallet}>Connect Wallet</button>
          ) : (
            <Fragment>
              <p className="code">
                Seems you don't have a wallet installed on your browser
              </p>
              <a
                href="https://metamask.io/download.html"
                target="_blank"
                rel="noreferrer"
              >
                Click to install MetaMask
              </a>
            </Fragment>
          )}
        </div>
      </main>
    </>
  );
}
